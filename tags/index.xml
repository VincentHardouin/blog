<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tags on Vincent Hardouin</title><link>https://vincenthardouin.dev/tags/</link><description>Recent content in Tags on Vincent Hardouin</description><generator>Hugo -- gohugo.io</generator><language>FR-fr</language><atom:link href="https://vincenthardouin.dev/tags/index.xml" rel="self" type="application/rss+xml"/><item><title>J'ai automatisé mes réservations de séances de sport</title><link>https://vincenthardouin.dev/posts/j-ai-automatise-mes-reservations-de-sport/</link><pubDate>Fri, 10 Jan 2025 10:01:00 +0200</pubDate><guid>https://vincenthardouin.dev/posts/j-ai-automatise-mes-reservations-de-sport/</guid><description>&lt;p>Nous sommes début 2025 et vous avez sûrement pris de bonnes résolutions pour cette année. Souvent cela rime avec de
nouvelles habitudes. Je profite de cette période pour vous partager comment j&amp;rsquo;ai conservé une habitude en automatisant
un irritant.&lt;/p>
&lt;p>L&amp;rsquo;année 2024 a marqué mon véritable retour au sport, après des années passées en salle de sport sans grande conviction.
Elle a débuté avec la natation, mais les horaires des piscines de Paris et ma motivation n&amp;rsquo;étaient pas compatibles.
Elle s&amp;rsquo;est poursuivie avec le badminton. Aujourd&amp;rsquo;hui, je partage mes entraînements entre mon club et des
réservations de terrains à l&amp;rsquo;&lt;a href="https://www.ucpa.com/sport-station/paris-19">UCPA Sport Station&lt;/a>. Pour ces réservations,
j&amp;rsquo;utilise &lt;a href="https://gymlib.com/fr">Gymlib&lt;/a>, une application d&amp;rsquo;abonnement de sport partiellement pris en charge par mon
employeur.&lt;/p>
&lt;p>Comme le souligne James Clear dans Atomic Habits &amp;ldquo;If you want to increase the odds that a behavior will occur, then you
need to make it attractive.”. Or, la complexité de réservation via Gymlib pour l&amp;rsquo;UCPA va à l&amp;rsquo;encontre de ce principe, au
point que cela aurait pu compromettre ma nouvelle habitude.&lt;/p>
&lt;h2 id="problème">Problème&lt;/h2>
&lt;p>La réservation d&amp;rsquo;une séance à l&amp;rsquo;UCPA via Gymlib est fastidieuse. Voici les différentes étapes.&lt;/p>
&lt;p>&lt;figure>
&lt;img src='processus-de-reservations.png' title='Processus de réservation via Gymlib pour l&amp;#39;UCPA Sport Station' alt='Processus de réservation via Gymlib pour l’UCPA Sport Station, expliquez ensuite' loading='lazy' />
&lt;figcaption>Processus de réservation via Gymlib pour l&amp;rsquo;UCPA Sport Station&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>Pour résumer, je fais une demande de code via Gymlib, je reçois un e-mail avec le code après quelques minutes. Puis je
peux remplir le formulaire de contremarque, ce qui permet à l&amp;rsquo;UCPA de ne pas me facturer, mais de facturer Gymlib, et entre
10min et quelques heures, je reçois la validation de l&amp;rsquo;UCPA qui m&amp;rsquo;a crédité un e-billet sur mon compte UCPA.&lt;/p>
&lt;p>Le réel problème ce sont les différents temps d&amp;rsquo;attente qui poussent à faire autre chose entre temps et oublier de
réaliser la réservation, c&amp;rsquo;est mon irritant.
Ensuite, je me demande s&amp;rsquo;il est intéressant d&amp;rsquo;automatiser cette tâche: est-ce que je le fais assez souvent ?
Ce projet a pour vocation d&amp;rsquo;être utilisé 3 fois par mois, ce qui correspond à la limite de mon abonnement
Gymlib. Et la réservation me prend 5min, mais avec les temps d&amp;rsquo;attente cela peut aller de trente minutes à quelques
heures.&lt;/p>
&lt;p>J&amp;rsquo;aime bien le schéma comique de &lt;a href="https://xkcd.com/">xkcd&lt;/a> &amp;ldquo;Is It Worth the Time?&amp;rdquo; , qui montre le temps maximum à allouer pour automatiser une
tâche en fonction de sa durée et sa récurrence.&lt;/p>
&lt;p>&lt;img src='xkcd_1205.png' alt='chart showing the amount of work (time) one can dedicate to making a task more efficient' loading='lazy' />&lt;/p>
&lt;p>Dans mon cas, le calcul correspond à : 3 occurrences / mois (ce qui correspond entre hebdomadaire et mensuel sur le
schéma) * 5 ans (la durée utilisée sur le schéma) = 180 occurrences
180 occurrences * 30 min en moyenne économisées = 5400 minutes = 90h = 3,75 j ce qui est bien comparable au schéma.&lt;/p>
&lt;p>Le schéma donne des exemples sur 5 ans, mais en réalité 2 ans me paraissent plus raisonnables, ce qui donne 72
occurrences et par conséquent 36h.
Les différentes tâches doivent être automatisées en moins de 36h, ce qui me semble réalisable.&lt;/p>
&lt;p>Pour que l&amp;rsquo;automatisation soit &amp;ldquo;rentable&amp;rdquo;, je ne dois pas mettre plus de 36h à l&amp;rsquo;automatiser.
Parfois, ce n&amp;rsquo;est pas rentable de le faire, mais il est nécessaire de se demander :&lt;/p>
&lt;ul>
&lt;li>est-ce que l&amp;rsquo;irritant est assez fort pour rechigner à le faire&lt;/li>
&lt;li>voire, est-ce que cela peut me faire perdre mon habitude ?&lt;/li>
&lt;/ul>
&lt;p>Un cas plus concret : si vous prenez une salle de sport à 1h de chez vous, versus une salle de sport sur votre chemin de
retour du boulot, il y a de forte chances que l&amp;rsquo;habitude s&amp;rsquo;ancre dans le second cas plutôt que le premier.
Dans le cas des réservations, il est probable que cela puisse m’en faire manquer, ou me rebuter à les
faire, ce qui aura tendance à couper une habitude. Vous savez les fameux streaks qu&amp;rsquo;il ne faut pas casser.
Le risque est de manquer ou retarder certaines réservations, ce qui peut briser la régularité de la
pratique. Le principe du &lt;a href="https://jamesclear.com/stop-procrastinating-seinfeld-strategy">&amp;ldquo;Don&amp;rsquo;t Break the Chain&amp;rdquo;&lt;/a>, popularisé par Jerry Seinfeld et repris par James Clear
souligne l&amp;rsquo;importance de maintenir une pratique régulière sans interruption. Chaque séance manquée à cause d&amp;rsquo;une
réservation non effectuée représente donc un risque pour la pérennité de cette nouvelle habitude sportive.&lt;/p>
&lt;p>Une fois cette analyse faite et conscient que cette friction pourrait compromettre ma nouvelle habitude, j&amp;rsquo;ai décidé d'
entreprendre un MVP (Minimum Valuable Product).&lt;/p>
&lt;h2 id="mvp">MVP&lt;/h2>
&lt;p>J&amp;rsquo;ai pris le parti d&amp;rsquo;automatiser l&amp;rsquo;étape de contremarque en premier. Mon idée était donc de récupérer les e-mails
spécifiques à un code UCPA par Gymlib et remplir le formulaire de contremarque. Pour lire les e-mails, j&amp;rsquo;ai utilisé le
package &lt;a href="https://github.com/postalsys/imapflow">&lt;code>imapflow&lt;/code>&lt;/a>, combiné à &lt;a href="https://github.com/nodemailer/mailparser">
&lt;code>mailparser&lt;/code>&lt;/a> pour récupérer plus facilement le code dans l&amp;rsquo;e-mail.
Le détail de l&amp;rsquo;implémentation se trouve &lt;a href="https://github.com/VincentHardouin/gymlib-ucpa-facilitator/blob/1af15b16652091cb6466a64ccbfe6ae2e165cbf1/src/infrastructure/adapters/MailAdapter.js">sur GitHub&lt;/a>, voici les étapes principales :&lt;/p>
&lt;ul>
&lt;li>se connecter à la boite e-mail avec &lt;code>imapflow&lt;/code> :&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">class&lt;/span> &lt;span class="nx">MailAdapter&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">async&lt;/span> &lt;span class="nx">getConnectedClient&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">client&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">ImapFlow&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">host&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">host&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">port&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">port&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">secure&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">auth&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">user&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">user&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">pass&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">password&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">logger&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">await&lt;/span> &lt;span class="nx">client&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">connect&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">client&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>récupérer le contenu des e-mails avec &lt;code>mailparser&lt;/code>:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">class&lt;/span> &lt;span class="nx">MailAdapter&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">async&lt;/span> &lt;span class="nx">fetch&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">searchQuery&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">client&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kr">await&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getConnectedClient&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">lock&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kr">await&lt;/span> &lt;span class="nx">client&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getMailboxLock&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;INBOX&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">mails&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">try&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="kr">await&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="nx">rawMail&lt;/span> &lt;span class="k">of&lt;/span> &lt;span class="nx">client&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">fetch&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">searchQuery&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">source&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">headers&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;date&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;subject&amp;#39;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}))&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">mail&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kr">await&lt;/span> &lt;span class="nx">simpleParser&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">rawMail&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">source&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">mails&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">push&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">uid&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">message&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">uid&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">date&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">mail&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">date&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">title&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">mail&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">subject&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">html&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">mail&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">html&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">text&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">mail&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">text&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">finally&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">lock&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">release&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">await&lt;/span> &lt;span class="nx">client&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">logout&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">mails&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Dans le formulaire, les champs à remplir sont identiques, seul le code fourni par Gymlib change, donc
l&amp;rsquo;automatisation est plutôt simple. La complexité vient du fait que le formulaire contient un jeton CSRF, ce qui fait
qu&amp;rsquo;on ne peut pas passer par un simple appel API pour envoyer le formulaire (le serveur envoie un champ caché avec
ce fameux jeton). J&amp;rsquo;ai utilisé &lt;a href="https://pptr.dev/">puppeeter&lt;/a>, qui a pour avantage d&amp;rsquo;automatiser les actions dans un navigateur, ce qui fait
qu&amp;rsquo;on récupère bien un jeton CSRF avant l&amp;rsquo;envoi, comme si on le faisait à la main. Pour les différents tests, j&amp;rsquo;ai mis
en place un feature toggle pour désactiver l&amp;rsquo;envoi du formulaire. Le détail se
trouve &lt;a href="https://github.com/VincentHardouin/gymlib-ucpa-facilitator/blob/1af15b16652091cb6466a64ccbfe6ae2e165cbf1/src/domain/usecases/SubmitFormUseCase.js">sur GitHub.&lt;/a>&lt;/p>
&lt;p>Après quelques heures de code, je me suis retrouvé avec une application qui lisait les mails provenant de Gymlib et qui
remplissait le formulaire de contremarque. Cela réduit les étapes manuelles à une seule : demander une séance sur
l&amp;rsquo;application Gymlib. Puis il me reste plus qu&amp;rsquo;à attendre la validation de l&amp;rsquo;UCPA par e-mail.
J&amp;rsquo;ai donc à ce moment-là un bon MVP, hébergé sur mon VPS. Cette première version fonctionnelle m&amp;rsquo;a permis de valider mon approche.
Encouragé par ces résultats, j&amp;rsquo;ai décidé d&amp;rsquo;enrichir la solution avec des fonctionnalités qui simplifieraient encore davantage mon
expérience.&lt;/p>
&lt;h2 id="nouvelles-fonctionnalités">Nouvelles fonctionnalités&lt;/h2>
&lt;h3 id="notifications-de-créneaux">Notifications de créneaux&lt;/h3>
&lt;p>J&amp;rsquo;ai mis en place une notification sur mon téléphone avec les créneaux disponibles aux horaires
qui me plaisent. La réception de l&amp;rsquo;e-mail de confirmation de l&amp;rsquo;UCPA déclenche la notification. Pour coder cette
fonctionnalité, j&amp;rsquo;ai récupéré les créneaux disponibles via l&amp;rsquo;API de l&amp;rsquo;UCPA. J&amp;rsquo;ai stocké par ailleurs les créneaux que je privilégie (dans une variable d&amp;rsquo;environnement).
Enfin, pour recevoir la notification sur mon téléphone, j&amp;rsquo;ai pour habitude d&amp;rsquo;utiliser &lt;a href="https://ntfy.sh/">Ntfy&lt;/a> , qui permet d&amp;rsquo;envoyer une notification via un appel HTTP. Je décris
déjà Ntfy dans l&amp;rsquo;article &lt;a href="https://vincenthardouin.dev/posts/envoyer-des-notifications-avec-les-automations-homekit">&amp;ldquo;Envoyer des notifications avec les automations HomeKit&amp;rdquo;&lt;/a>.&lt;/p>
&lt;p>Pour la récupération des créneaux disponibles, le code ressemble à ça :&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">async&lt;/span> &lt;span class="nx">getAllAvailable&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">areaId&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">requests&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">getDatePlusDays&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">getDatePlusDays&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">7&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">getDatePlusDays&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">14&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">].&lt;/span>&lt;span class="nx">map&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kr">async&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">date&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">httpAdapter&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sb">`https://www.ucpa.com/sport-station/api/areas-offers/weekly/alpha_hp?=&amp;amp;reservationPeriod=1&amp;amp;espace=&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">areaId&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">&amp;amp;time=&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">date&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">&amp;amp;__amp_source_origin=https://www.ucpa.com`&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="s1">&amp;#39;User-agent&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">USER_AGENT&lt;/span> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">availableTimeSlots&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="nx">request&lt;/span> &lt;span class="k">of&lt;/span> &lt;span class="nx">requests&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">planner&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kr">await&lt;/span> &lt;span class="nx">request&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">availableTimeSlots&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">push&lt;/span>&lt;span class="p">(...&lt;/span>&lt;span class="nx">planner&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">columns&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">flatMap&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">column&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="nx">column&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">items&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">filter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">item&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="nx">item&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">hasStock&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">availableTimeSlots&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">map&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">slot&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">TimeSlot&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">startTimestamp&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">slot&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">start_time&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">startTime&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">slot&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">startTime&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">endTime&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">slot&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">endTime&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">startDate&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">slot&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">startDate&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">stock&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">slot&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">stock&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Mes créneaux horaires de préférence sont stockés en JSON dans cette variable d&amp;rsquo;environnement.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-env" data-lang="env">&lt;span class="line">&lt;span class="cl">&lt;span class="nv">TIME_SLOTS_PREFERENCES&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;{
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1"> &amp;#34;sun&amp;#34;: [ &amp;#39;&lt;/span>14H00&lt;span class="s1">&amp;#39;, &amp;#39;&lt;/span>15H00&lt;span class="s1">&amp;#39; ]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Voilà la recherche entre les créneaux disponibles et ceux préférés.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="k">return&lt;/span> &lt;span class="nx">timeSlots&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="nx">filter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">slot&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="nx">slot&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">isConvenient&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">timeSlotsPreferences&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="nx">sort&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">slotA&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">slotB&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="nx">slotA&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">isMoreConvenient&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">slotB&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">timeSlotsPreferences&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Avec la class &lt;code>TimeSlot&lt;/code> qui a les fonctions &lt;code>isConvenient&lt;/code> et &lt;code>isMoreConvenient&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">export&lt;/span> &lt;span class="kr">class&lt;/span> &lt;span class="nx">TimeSlot&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">isConvenient&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">timeSlotsPreferences&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">timeSlotsPreferences&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">dayOfWeek&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">?&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">includes&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">startTime&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">isMoreConvenient&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">slotToCompare&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">timeSlotsPreferences&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">orderedWeekDays&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">Object&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">keys&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">timeSlotsPreferences&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">rankDayOfWeekA&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">orderedWeekDays&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">indexOf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">dayOfWeek&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">rankDayOfWeekB&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">orderedWeekDays&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">indexOf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">slotToCompare&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">dayOfWeek&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">isOnSameDay&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">dayOfWeek&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="nx">slotToCompare&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">dayOfWeek&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="nx">isOnSameDay&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">rankDayOfWeekA&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="nx">rankDayOfWeekB&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">timeSlotsPreferences&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">dayOfWeek&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="nx">indexOf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">startTime&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="nx">timeSlotsPreferences&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">slotToCompare&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">dayOfWeek&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="nx">indexOf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">slotToCompare&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">startTime&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>J&amp;rsquo;avais besoin d&amp;rsquo;une solution simple pour comparer deux créneaux. L&amp;rsquo;implémentation a émergé grâce aux tests unitaires : vive le &lt;a href="https://en.wikipedia.org/wiki/Test-driven_development">TDD&lt;/a> !&lt;/p>
&lt;p>La notification des créneaux disponibles étant en place, je me suis attaqué à un autre aspect de l&amp;rsquo;organisation : la
visibilité de mes réservations.&lt;/p>
&lt;h3 id="calendrier">Calendrier&lt;/h3>
&lt;p>Pour ne pas oublier mes réservations, je veux voir mes prochaines séances dans mon agenda. Pour cela, j&amp;rsquo;ai mis en place un calendrier iCal. Pour le créer, j&amp;rsquo;ai utilisé le package &lt;a href="https://github.com/sebbo2002/ical-generator">
&lt;code>ical-generator&lt;/code>&lt;/a> qui fait très bien ce qu&amp;rsquo;il prétend faire.&lt;/p>
&lt;p>Pour mettre à disposition le calendrier sous forme d&amp;rsquo;abonnement, il a fallu mettre en place un serveur web. J&amp;rsquo;ai
utilisé &lt;a href="https://hapi.dev/">hapi&lt;/a> par simple habitude, étant à l&amp;rsquo;aise avec ce serveur, cela me fait gagner du temps.&lt;/p>
&lt;p>Avec le calendrier en place, il ne me restait plus qu&amp;rsquo;un dernier irritant à résoudre qui concerne mon arrivée à l&amp;rsquo;UCPA.&lt;/p>
&lt;h3 id="pass">Pass&lt;/h3>
&lt;p>L&amp;rsquo;UCPA utilise un système de QR Code pour gérer l&amp;rsquo;accès aux installations. Le QR Code d&amp;rsquo;accès est fourni dans l'
e-mail de confirmation. C&amp;rsquo;est fastidieux de retrouver l&amp;rsquo;e-mail correspondant à bonne réservation lorsque j&amp;rsquo;ai plusieurs
réservation en cours. Pour répondre à ce dernier irritant, j&amp;rsquo;ai décidé de mettre en place un
pass &lt;a href="https://www.apple.com/wallet/">Apple Wallet&lt;/a>, qui se met à jour en fonction de la séance à venir. Pour cela, j&amp;rsquo;ai
besoin de certificats, disponibles avec licence Apple developper. J&amp;rsquo;ai commencé à
regarder ce qu&amp;rsquo;il fallait faire pour créer un pass. En JavaScript, nous avons un package qui facilite la création de
passes&lt;code>passkit-generator&lt;/code>.&lt;/p>
&lt;p>Pour gérer la mise à jour des passes, il est nécessaire d&amp;rsquo;implémenter cinq routes dans son API, tout est succinctement
documenté
dans &lt;a href="https://developer.apple.com/documentation/walletpasses/adding-a-web-service-to-update-passes">la documentation d&amp;rsquo;Apple&lt;/a>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl">POST /v1/devices/{deviceLibraryIdentifier}/registrations/{passTypeIdentifier}/{serialNumber}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">GET /v1/devices/{deviceLibraryIdentifier}/registrations/{passTypeIdentifier}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">GET /v1/passes/{passTypeIdentifier}/{serialNumber}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">DELETE /v1/devices/{deviceLibraryIdentifier}/registrations/{passTypeIdentifier}/{serialNumber}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">POST /v1/log
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Pour envoyer des notifications via Apple Push Notifications, le protocole est HTTP/2, actuellement non supporté par
la méthode &lt;code>fetch&lt;/code> native de Node.js. La solution fournie
dans &lt;a href="https://github.com/nodejs/undici/issues/2750">cette issue&lt;/a> est d&amp;rsquo;installer le package &lt;code>undici&lt;/code> et d&amp;rsquo;activer
HTTP/2 :&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">Agent&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">setGlobalDispatcher&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;undici&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">setGlobalDispatcher&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="nx">Agent&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">allowH2&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}));&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>L&amp;rsquo;usage de l&amp;rsquo;API APN dans le cadre des pass n&amp;rsquo;est pas documenté, ce qui a créé une seconde difficulté. En effet, j&amp;rsquo;ai dû
trouver &lt;a href="https://stackoverflow.com/a/67495800">sur StackOverflow&lt;/a> que l&amp;rsquo;en-tête HTTP
&lt;code>apns-topic&lt;/code> doit maintenant contenir l&amp;rsquo;identifiant du pass. Une fois ce
point compris, l&amp;rsquo;appel réseau reste néanmoins très classique.&lt;/p>
&lt;p>Le code correspond à cela :&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">async&lt;/span> &lt;span class="nx">notify&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">pushToken&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">token&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kr">await&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">_getToken&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">headers&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;Authorization&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="sb">`Bearer &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">token&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">`&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;apns-topic&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">topic&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">url&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sb">`&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">url&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">/3/device/&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">pushToken&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">`&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">httpAdapter&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">post&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">url&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">headers&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Lors des modifications du pass, on utilise l&amp;rsquo;Apple Push Notification APN, mais en réalité il s&amp;rsquo;agit d&amp;rsquo;une notification
particulière, car ici nous aucun texte n&amp;rsquo;est affiché à l&amp;rsquo;utilisateur. Si nous souhaitons avertir des
changements dans le pass il faut utiliser l&amp;rsquo;attribut &lt;code>changeMessage&lt;/code> d&amp;rsquo;un champ du pass lorsque nous retournons le pass
mis à jour. Apple l&amp;rsquo;indique au niveau de &lt;a href="https://developer.apple.com/documentation/walletpasses/passfieldcontent">la documentation de
&lt;code>changeMessage&lt;/code>&lt;/a> : &amp;ldquo;You must provide a value for the system
to show a change notification&amp;rdquo;. La notification déclenche le fait que le téléphone demande le nouveau pass. Si le
nouveau pass contient des &amp;ldquo;changeMessage&amp;rdquo; dans des champs modifiés alors une notification est affichée à l&amp;rsquo;utilisateur,
ce qui revient pratiquement à la même chose.&lt;/p>
&lt;p>Les marques peuvent ainsi communiquer plus facilement avec leurs clients, qui n&amp;rsquo;ont pas besoin de télécharger une
application, mais qui doivent simplement de posséder une carte de fidélité par exemple. C&amp;rsquo;est d&amp;rsquo;ailleurs devenu un
nouveau créneau d&amp;rsquo;entreprise, on peut noter par exemple &lt;a href="https://www.captainwallet.com/">CaptainWallet par Brevo&lt;/a>&lt;/p>
&lt;p>Après avoir implémenté ces améliorations successives, il est temps de prendre du recul sur ce projet et d&amp;rsquo;en tirer les
enseignements.&lt;/p>
&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>Ce projet d&amp;rsquo;automatisation s&amp;rsquo;est révélé être un succès, tant en termes de temps investi que de résultats obtenus. Bien
que le calcul initial basé sur le schéma XKCD nous ait fourni un cadre de réflexion intéressant, il est important de
souligner que dans le contexte d&amp;rsquo;une habitude, la valeur réelle de l&amp;rsquo;automatisation va au-delà d&amp;rsquo;une simple équation
temps/bénéfice. Éliminer un irritant qui pourrait compromettre une habitude positive justifie à mon sens de dépasser le
temps théoriquement &amp;ldquo;rentable&amp;rdquo;.&lt;/p>
&lt;p>D&amp;rsquo;autre part, ce projet m&amp;rsquo;a permis d&amp;rsquo;apprendre des choses sur le fonctionnement des passes Apple Wallet, ce qui pourrait m&amp;rsquo;être utile à l&amp;rsquo;avenir.&lt;/p>
&lt;p>Il est toutefois important de garder à l&amp;rsquo;esprit qu&amp;rsquo;une automatisation n&amp;rsquo;est jamais vraiment &amp;ldquo;terminée&amp;rdquo;. Comme tout
système en production, elle nécessite une maintenance régulière et peut demander des ajustements au fil du temps,
aspects qu&amp;rsquo;il faut prendre en compte dans l&amp;rsquo;équation globale.&lt;/p>
&lt;p>&lt;img src='xkcd_1319.png' alt='Two graphs are shown, plotting workload against time.' loading='lazy' />&lt;/p></description></item><item><title>Envoyer des notifications avec les automations HomeKit</title><link>https://vincenthardouin.dev/posts/envoyer-des-notifications-avec-les-automations-homekit/</link><pubDate>Fri, 15 Dec 2023 11:34:07 +0200</pubDate><guid>https://vincenthardouin.dev/posts/envoyer-des-notifications-avec-les-automations-homekit/</guid><description>&lt;h2 id="contexte">Contexte&lt;/h2>
&lt;p>Apple propose Shortcuts depuis 2018. C&amp;rsquo;est une application qui permet de créer/utiliser des automations sur iOS, macOS
et plus récemment pour HomeKit en se lançant sur le Hub de la maison.
Cependant, du fait que ces automatisations s&amp;rsquo;exécutent directement sur le Hub de la maison, elles ne peuvent pas
bénéficier des applications tierces telles que PushCut, Controller, Scriptable, qui simplifient ces processus.&lt;/p>
&lt;p>Nous allons donc explorer une méthode pour contourner cette limitation et envoyer des notifications via les
automatisations HomeKit.&lt;/p>
&lt;h2 id="prérequis">Prérequis&lt;/h2>
&lt;p>Un Hub HomeKit (Apple TV, HomePod, iPad)&lt;/p>
&lt;h2 id="recevoir-des-notifications">Recevoir des notifications&lt;/h2>
&lt;p>Dans mon idée, je voulais que les personnes concernées par une notification en reçoivent une.
Par exemple, si la dernière personne qui part de la maison a oublié de ferme les fenêtres, alors elle reçoit une
notification.&lt;/p>
&lt;p>Dans les faits, il n&amp;rsquo;est pas possible de faire cela avec les automations HomeKit, car il n&amp;rsquo;est pas possible de savoir
qui a déclenché l&amp;rsquo;automation.&lt;/p>
&lt;p>Nous allons donc créer une automation qui va envoyer une notification à toutes les personnes de la maison.&lt;/p>
&lt;p>Pour envoyer la notification, l&amp;rsquo;idéal serait de pouvoir le faire via une requête HTTP. Cela tombe bien, car il existe
un service qui permet de faire cela : &lt;a href="https://ntfy.org/">Ntfy&lt;/a>.&lt;/p>
&lt;h3 id="plan-gratuit-de-ntfy">Plan Gratuit de Ntfy&lt;/h3>
&lt;p>Le plan gratuit de Ntfy autorise l&amp;rsquo;envoi de 250 notifications par mois, amplement suffisant pour notre usage. Si vous
souhaitez soutenir le projet, vous pouvez prendre un abonnement ou le sponsoriser.&lt;/p>
&lt;p>La limitation du plan gratuit est de ne pas pouvoir protéger les topics.
Il faut donc générer un topic avec un nom aléatoire et surtout, il ne faudra jamais publier d&amp;rsquo;information personnelle
dessus.&lt;/p>
&lt;h3 id="self-hosted">Self-hosted&lt;/h3>
&lt;p>Si vous préférez, vous pouvez aussi héberger votre propre instance de Ntfy, en suivant les instructions de
&lt;a href="https://docs.ntfy.sh/install/">la documentation de Ntfy&lt;/a>.&lt;/p>
&lt;p>Attention à bien protéger votre
instance, &lt;a href="https://docs.ntfy.sh/config/#access-control">en activant les contrôles d&amp;rsquo;accès&lt;/a>.&lt;/p>
&lt;h3 id="télécharger-lapplication-ntfy">Télécharger l&amp;rsquo;application Ntfy&lt;/h3>
&lt;p>Une fois votre topic créé, vous pouvez télécharger l&amp;rsquo;application Ntfy sur votre téléphone, puis vous devez vous abonner
à votre topic.&lt;/p>
&lt;h3 id="envoi-dune-notification">Envoi d&amp;rsquo;une notification&lt;/h3>
&lt;p>Vous pouvez ensuite essayer d&amp;rsquo;envoyer une notification depuis un terminal avec la commande suivante :&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">curl -X POST -H &lt;span class="s1">&amp;#39;Title: Titre de la notification&amp;#39;&lt;/span> -d &lt;span class="s1">&amp;#39;Ceci est un test &amp;#39;&lt;/span> https://ntfy.sh/&amp;lt;topic&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Maintenant, nous savons recevoir des notifications, nous allons pouvoir créer notre automation qui envoie cette
notification.&lt;/p>
&lt;h2 id="créer-une-automation">Créer une automation&lt;/h2>
&lt;p>Nous allons sur l&amp;rsquo;application Home, puis sur l&amp;rsquo;onglet Automation, puis sur le bouton + en haut à droite.&lt;/p>
&lt;p>Pour l&amp;rsquo;exemple, nous allons choisir le déclencheur &amp;ldquo;Quand la dernière personne quitte la maison&amp;rdquo;.
Nous voulons ensuite faire un shortcut, donc tout en bas, nous choisissons &amp;ldquo;Convertir en raccourci&amp;rdquo;.
Puis, nous ajoutons l&amp;rsquo;action &amp;ldquo;Récupérer une page web&amp;rdquo;.&lt;/p>
&lt;p>Nous choisissons ensuite la méthode POST, et là le drame.
Nous pouvons voir qu&amp;rsquo;Apple propose uniquement du JSON, un formulaire ou des fichiers, mais pas de texte brut, nous
sommes bien embêtés.&lt;/p>
&lt;p>Heureusement, Ntfy a prévu ce cas avec la possibilité d&amp;rsquo;appeler la ressource &lt;code>/&lt;/code> avec du JSON.&lt;/p>
&lt;p>Notre curl précédent devient donc :&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">curl -X POST -d &lt;span class="s1">&amp;#39;{ &amp;#34;topic:&amp;#34;&amp;lt;topic&amp;gt;&amp;#34;, &amp;#34;title&amp;#34;: &amp;#34;Titre de la notification&amp;#34;, &amp;#34;message&amp;#34;: &amp;#34;Ceci est un test&amp;#34; }&amp;#39;&lt;/span> https://ntfy.sh/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Notez que le topic est désormais dans le JSON.&lt;/p>
&lt;p>Nous pouvons donc finaliser notre action :&lt;/p>
&lt;p>&lt;img src='action-recuperer-une-page-web.png' alt='Action Récupérer une page web' loading='lazy' />&lt;/p>
&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>Ntfy, nous a permis d&amp;rsquo;envoyer des notifications depuis les automations HomeKit. Nous pouvons aussi nous en servir depuis
les Shortcuts, et reste une solution intéressante pour envoyer des notifications depuis un script.&lt;/p>
&lt;p>N&amp;rsquo;hésitez pas à soutenir le projet si vous l&amp;rsquo;utilisez !&lt;/p></description></item><item><title>Send notifications with HomeKit automations</title><link>https://vincenthardouin.dev/posts/send-notifications-with-homekit-automations/</link><pubDate>Fri, 15 Dec 2023 11:34:07 +0200</pubDate><guid>https://vincenthardouin.dev/posts/send-notifications-with-homekit-automations/</guid><description>&lt;h2 id="context">Context&lt;/h2>
&lt;p>Apple has been offering Shortcuts since 2018. It&amp;rsquo;s an app that lets you create/use automations on iOS, macOS
and more recently for HomeKit by launching on the Home Hub.
However, because these automations run directly on the Home Hub, they cannot
benefit from third-party applications such as PushCut, Controller, Scriptable, which simplify these processes.&lt;/p>
&lt;p>So we&amp;rsquo;re going to explore a method of getting around this limitation and sending notifications via
HomeKit automations.&lt;/p>
&lt;h2 id="prerequisites">Prerequisites&lt;/h2>
&lt;p>A HomeKit Hub (Apple TV, HomePod, iPad)&lt;/p>
&lt;h2 id="receiving-notifications-with-ntfy">Receiving notifications with NTFY&lt;/h2>
&lt;p>In my idea, I wanted the people involved in a notification to receive one.
For example, if the last person to leave the house forgot to close the windows, then they&amp;rsquo;d receive a
notification.&lt;/p>
&lt;p>In practice, it&amp;rsquo;s not possible to do this with HomeKit automations, as there&amp;rsquo;s no way of knowing who triggered the
automation.
who triggered the automation.&lt;/p>
&lt;p>So we&amp;rsquo;re going to create an automation that will send a notification to everyone in the house.&lt;/p>
&lt;p>Ideally, the notification should be sent via an HTTP request. That&amp;rsquo;s ideal, because there&amp;rsquo;s
service that lets you do just that: &lt;a href="https://ntfy.org/">Ntfy&lt;/a>.&lt;/p>
&lt;h3 id="free-tier">Free Tier&lt;/h3>
&lt;p>Ntfy&amp;rsquo;s free plan allows you to send 250 notifications per month, more than enough for our purposes. If you&amp;rsquo;d
support the project, you can subscribe or sponsor it.&lt;/p>
&lt;p>The limitation of the free plan is that you can&amp;rsquo;t protect your topics.
You&amp;rsquo;ll need to generate a topic with a random name and, above all, never publish personal information on it.
on it.&lt;/p>
&lt;h3 id="self-hosted">Self-hosted&lt;/h3>
&lt;p>If you prefer, you can also host your own instance of Ntfy, following the instructions in
&lt;a href="https://docs.ntfy.sh/install/">Ntfy documentation&lt;/a>.&lt;/p>
&lt;p>Be sure to protect your
instance, &lt;a href="https://docs.ntfy.sh/config/#access-control">by enabling access controls&lt;/a>.&lt;/p>
&lt;h3 id="download-the-ntfy-application">Download the Ntfy application&lt;/h3>
&lt;p>Once you&amp;rsquo;ve created your topic, you can download the Ntfy application onto your phone, then subscribe to your topic.
to your topic.&lt;/p>
&lt;h3 id="send-a-notification">Send a notification&lt;/h3>
&lt;p>You can then try sending a notification from a terminal with the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">curl -X POST -H &lt;span class="s1">&amp;#39;Title: Notification title&amp;#39;&lt;/span> -d &lt;span class="s1">&amp;#39;This is a test&amp;#39;&lt;/span> https://ntfy.sh/&amp;lt;topic&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now that we know how to receive notifications, we can create our own automation to send this
notification.&lt;/p>
&lt;h2 id="create-an-automation">Create an automation&lt;/h2>
&lt;p>We go to Home app, then to the Automation tab, then to the + button in the top right-hand corner.&lt;/p>
&lt;p>For the example, we&amp;rsquo;ll choose the trigger &amp;ldquo;When the last person leaves the house&amp;rdquo;.
We then want to make a shortcut, so at the very bottom we choose &amp;ldquo;Convert to shortcut&amp;rdquo;.
Then we add the action &amp;ldquo;Retrieve a web page&amp;rdquo;.&lt;/p>
&lt;p>Then we choose the POST method, and there&amp;rsquo;s the drama.
We can see that Apple only offers JSON, a form or files, but not plain text.
so we&amp;rsquo;re in a bit of a bind.&lt;/p>
&lt;p>Fortunately, Ntfy has foreseen this case with the possibility of calling the &lt;code>/&lt;/code> resource with JSON.&lt;/p>
&lt;p>Our previous curl thus becomes :&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">curl -X POST -d &lt;span class="s1">&amp;#39;{ &amp;#34;topic:&amp;#34;&amp;lt;topic&amp;gt;&amp;#34;, &amp;#34;title&amp;#34;: &amp;#34;Notification title&amp;#34;, &amp;#34;message&amp;#34;: &amp;#34;This is a test&amp;#34; }&amp;#39;&lt;/span> https://ntfy.sh/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Note that the topic is now in JSON.&lt;/p>
&lt;p>We can now finalize our action:&lt;/p>
&lt;p>&lt;img src='action-recuperer-une-page-web.png' alt='Get contents of' loading='lazy' />&lt;/p>
&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>Ntfy has enabled us to send notifications from HomeKit automations. We can also use it from Shortcuts
Shortcuts, and remains an interesting solution for sending notifications from a script.&lt;/p>
&lt;p>Don&amp;rsquo;t hesitate to support the project if you use it!&lt;/p></description></item><item><title>Switch to previous branches with git</title><link>https://vincenthardouin.dev/posts/switch-to-previous-branches-with-git/</link><pubDate>Thu, 17 Aug 2023 12:06:07 +0200</pubDate><guid>https://vincenthardouin.dev/posts/switch-to-previous-branches-with-git/</guid><description>&lt;p>When we work on a project with git, we regularly switch branches for different reasons: working on a new feature while
another is in review, taking into account review feedbacks, doing a review, etc.&lt;/p>
&lt;p>It can be interesting to quickly switch to a branch that we have recently used.
We can use the &lt;code>git switch -&lt;/code> command which allows us to switch to the last used branch.&lt;/p>
&lt;p>However, sometimes we want to go back to a branch that was used long ago.
Thanks to &lt;a href="https://github.com/junegunn/fzf">fzf&lt;/a>, we can use the following command, which allows us to choose the branch
we want to go back:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git reflog &lt;span class="p">|&lt;/span> grep checkout &lt;span class="p">|&lt;/span> grep -o &lt;span class="s1">&amp;#39;to .*$&amp;#39;&lt;/span> &lt;span class="p">|&lt;/span> grep -o &lt;span class="s1">&amp;#39; .*$&amp;#39;&lt;/span> &lt;span class="p">|&lt;/span> awk &lt;span class="s1">&amp;#39;!x[$0]++&amp;#39;&lt;/span> &lt;span class="p">|&lt;/span> fzf &lt;span class="p">|&lt;/span> xargs git switch
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src='demo-command-git.gif' alt='command demo to go back to recent branch' loading='lazy' />&lt;/p></description></item><item><title>Revenir sur ses branches récentes avec git</title><link>https://vincenthardouin.dev/posts/revenir-sur-ses-branches-recentes-avec-git/</link><pubDate>Thu, 17 Aug 2023 08:34:02 +0200</pubDate><guid>https://vincenthardouin.dev/posts/revenir-sur-ses-branches-recentes-avec-git/</guid><description>&lt;p>Lorsque nous travaillons sur un projet avec git, nous changeons régulièrement de branches, pour différentes raisons :
travailler sur une nouvelle fonctionnalité, pendant qu&amp;rsquo;une autre est en cours de review, pour prendre en compte des
retours de review, pour faire une review, etc.&lt;/p>
&lt;p>Il peut être intéressant de pouvoir revenir rapidement sur une branche que nous avons récemment utilisée.
Nous pouvons utiliser la commande &lt;code>git switch -&lt;/code> qui permet de revenir sur la dernière branche utilisée.
Cependant, parfois, nous souhaitons revenir sur une branche utilisée il y a plus longtemps.
Pour cela, nous pouvons utiliser cette commande, qui permet de choisir la branche sur laquelle nous souhaitons revenir
grâce à &lt;a href="https://github.com/junegunn/fzf">fzf&lt;/a> :&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git reflog &lt;span class="p">|&lt;/span> grep checkout &lt;span class="p">|&lt;/span> grep -o &lt;span class="s1">&amp;#39;to .*$&amp;#39;&lt;/span> &lt;span class="p">|&lt;/span> grep -o &lt;span class="s1">&amp;#39; .*$&amp;#39;&lt;/span> &lt;span class="p">|&lt;/span> awk &lt;span class="s1">&amp;#39;!x[$0]++&amp;#39;&lt;/span> &lt;span class="p">|&lt;/span> fzf &lt;span class="p">|&lt;/span> xargs git switch
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src='demo-command-git.gif' alt='demonstration de la commande permettant de revenir sur une branche précédente' loading='lazy' />&lt;/p></description></item><item><title>Comparer deux dossiers en ligne de commande</title><link>https://vincenthardouin.dev/posts/comparer-deux-dossiers/</link><pubDate>Mon, 06 Mar 2023 21:07:00 +0200</pubDate><guid>https://vincenthardouin.dev/posts/comparer-deux-dossiers/</guid><description>&lt;p>Parfois, nous pouvons avoir besoin de comparer le contenu de deux dossiers et éventuellement de leurs sous-dossiers,
sans
comparer leur contenu, mais uniquement leur nom.&lt;/p>
&lt;p>Si vous souhaitez comparer le contenu des fichiers, vous pouvez
consulter &lt;a href="https://jbuget.fr/posts/techniques-pour-fusionner-deux-versions-d-un-projet-shopify-grace-a-git/">l&amp;rsquo;article de Jérémy Buget qui traite le sujet.&lt;/a>&lt;/p>
&lt;h2 id="1er-cas--comparer-deux-dossiers-sans-sous-dossiers">1er cas : comparer deux dossiers sans sous-dossiers&lt;/h2>
&lt;p>Pour ce faire, j&amp;rsquo;en suis arrivé à la commande suivante :&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">diff &amp;lt;&lt;span class="o">(&lt;/span>ls dir1&lt;span class="o">)&lt;/span> &amp;lt;&lt;span class="o">(&lt;/span>ls dir2&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ou encore pour avoir un autre affichage du diff :&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">diff --unified &amp;lt;&lt;span class="o">(&lt;/span>ls dir1&lt;span class="o">)&lt;/span> &amp;lt;&lt;span class="o">(&lt;/span>ls dir2&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Dans cette commande, nous pouvons y trouver &lt;code>&amp;lt;()&lt;/code>.
Il s&amp;rsquo;agit
du &lt;a href="https://www.gnu.org/software/bash/manual/html_node/Process-Substitution.html#Process-Substitution">Process Substitution&lt;/a>
qui permet d&amp;rsquo;éviter de stocker le résultat d&amp;rsquo;une commande dans un fichier temporaire pour s&amp;rsquo;en servir ensuite.&lt;/p>
&lt;p>Cela réduit considérablement le nombre de commandes, nous nous retrouvons avec les commandes du dessus au lieu de :&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">ls dir1 &amp;gt; tmp_dir1.txt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ls dir2 &amp;gt; tmp_dir2.txt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">diff tmp_dir1.txt tmp_dir2.txt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">rm tmp_dir1.txt tmp_dir2.txt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Revenons à nos premières commandes en analysant le résultat de celles-ci.&lt;/p>
&lt;p>Pour les exemples suivants, j&amp;rsquo;ai créé deux dossiers :&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">❯ tree
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── dir1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│   ├── bar.html
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│   ├── foo.html
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│   ├── index.html
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│   └── waldo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│   └── garply.html
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">└── dir2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ├── corge.html
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ├── foo.html
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> └── index.html
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">4&lt;/span> directories, &lt;span class="m">7&lt;/span> files
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Nous pouvons donc voir que &lt;code>foo.html&lt;/code> et &lt;code>index.html&lt;/code> sont présents dans les deux dossiers, &lt;code>bar.html&lt;/code>
et &lt;code>waldo/garply.html&lt;/code> uniquement dans le premier.&lt;/p>
&lt;p>En lançant ces commandes, nous obtenons ce résultat :&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">❯ diff &amp;lt;&lt;span class="o">(&lt;/span>ls dir1&lt;span class="o">)&lt;/span> &amp;lt;&lt;span class="o">(&lt;/span>ls dir2&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1c1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt; bar.html
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">---
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;gt; corge.html
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">4d3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt; waldo
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Cette commande renvoie uniquement les différences entre les deux dossiers.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">❯ diff --unified &amp;lt;&lt;span class="o">(&lt;/span>ls dir1&lt;span class="o">)&lt;/span> &amp;lt;&lt;span class="o">(&lt;/span>ls dir2&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">--- /dev/fd/11 2023-03-06 18:33:47
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+++ /dev/fd/12 2023-03-06 18:33:47
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@@ -1,4 +1,3 @@
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-bar.html
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+corge.html
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> foo.html
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> index.html
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-waldo
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Celle-ci, nous montre un diff façon git.&lt;/p>
&lt;p>Ces commandes peuvent être suffisantes, mais nous pouvons aller plus loin et répondre à plus de cas d&amp;rsquo;usage avec la
commande &lt;code>comm&lt;/code>.&lt;/p>
&lt;p>Elle nous permet par exemple de voir uniquement les fichiers présents et/ou manquants dans un des dossiers.&lt;/p>
&lt;p>Voyons voir le résultat de cette commande sans option :&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">❯ comm &amp;lt;&lt;span class="o">(&lt;/span>ls dir1&lt;span class="o">)&lt;/span> &amp;lt;&lt;span class="o">(&lt;/span>ls dir2&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">bar.html
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> corge.html
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> foo.html
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> index.html
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">waldo
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Nous pouvons distinguer 3 colonnes séparées par des tabulations :&lt;/p>
&lt;ul>
&lt;li>La première correspond au fichier présent que dans le premier dossier&lt;/li>
&lt;li>La deuxième, uniquement dans le second&lt;/li>
&lt;li>La troisième, les fichiers en commun&lt;/li>
&lt;/ul>
&lt;p>Nous nous retrouvons à mon sens avec un diff plus explicite.&lt;/p>
&lt;p>Attention, il faut que les fichiers passés en paramètres soient triés par ordre alphabétique pour que la commande
fonctionne correctement.&lt;/p>
&lt;p>Maintenant que nous avons vu l&amp;rsquo;usage basique, nous pouvons utiliser les options.
Nous pouvons afficher des colonnes spécifiques grâce à l&amp;rsquo;option &lt;code>-&lt;/code> suivi
des numéros de colonne à ne pas afficher.&lt;/p>
&lt;p>Exemple :&lt;/p>
&lt;ul>
&lt;li>Afficher uniquement les fichiers en commun :&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">❯ comm -12 &amp;lt;&lt;span class="o">(&lt;/span>ls dir1&lt;span class="o">)&lt;/span> &amp;lt;&lt;span class="o">(&lt;/span>ls dir2&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">foo.html
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">index.html
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Afficher uniquement les fichiers manquants dans le deuxième dossier :&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">❯ comm -23 &amp;lt;&lt;span class="o">(&lt;/span>ls dir1&lt;span class="o">)&lt;/span> &amp;lt;&lt;span class="o">(&lt;/span>ls dir2&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">bar.html
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">waldo
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="2ème-cas--comparer-deux-dossiers-avec-des-sous-dossiers">2ème cas : comparer deux dossiers avec des sous-dossiers&lt;/h2>
&lt;p>Pour ce cas, nous allons utiliser la commande &lt;code>diff&lt;/code> avec l&amp;rsquo;option &lt;code>-r&lt;/code> qui permet de comparer récursivement les
dossiers :&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">❯ diff -r dir1 dir2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Only in dir1: bar.html
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Only in dir2: corge.html
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Only in dir1: waldo
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Cette commande nous permet de voir les différences entre les deux dossiers, mais nous ne pouvons pas voir les fichiers
des sous-dossiers manquants.&lt;/p>
&lt;p>Pour cela, nous allons utiliser la commande &lt;code>find&lt;/code> qui, en plus de pouvoir chercher un fichier, permet de lister les
fichiers d&amp;rsquo;un dossier et de ses sous-dossiers.&lt;/p>
&lt;p>Utilisée seule, elle donne :&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">❯ find dir1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">dir1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">dir1/index.html
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">dir1/bar.html
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">dir1/foo.html
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">dir1/waldo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">dir1/waldo/garply.html
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Comme nous pouvons le voir, elle nous donne le chemin complet des fichiers, ce qui n&amp;rsquo;est pas très pratique pour la
suite. Nous utiliserons en plus la commande &lt;code>sed&lt;/code> qui permet de remplacer une chaîne de caractères pour ne pas avoir le
nom du dossier dans lequel nous cherchons.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">❯ find dir1 &lt;span class="p">|&lt;/span> sed &lt;span class="s1">&amp;#39;s/dir1//g&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/index.html
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/bar.html
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/foo.html
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/waldo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/waldo/garply.html
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Nous obtenons donc le résultat que nous voulons pour pouvoir utiliser la commande &lt;code>comm&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">❯ comm &amp;lt;&lt;span class="o">(&lt;/span>find dir1 &lt;span class="p">|&lt;/span> sed &lt;span class="s1">&amp;#39;s/dir1//g&amp;#39;&lt;/span> &lt;span class="p">|&lt;/span> sort&lt;span class="o">)&lt;/span> &amp;lt;&lt;span class="o">(&lt;/span>find dir2 &lt;span class="p">|&lt;/span> sed &lt;span class="s1">&amp;#39;s/dir2//g&amp;#39;&lt;/span> &lt;span class="p">|&lt;/span> sort&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/bar.html
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> /corge.html
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> /foo.html
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> /index.html
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/waldo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/waldo/garply.html
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>Nous avons vu comment comparer deux dossiers en ligne de commande, avec ou sans sous-dossiers.
L&amp;rsquo;usage de comm nous permet, je trouve, d&amp;rsquo;avoir un affichage plus explicite que celui de diff et de répondre à plus de
cas d&amp;rsquo;usage.&lt;/p>
&lt;p>Si vous souhaitez voir un cas d&amp;rsquo;usage de ces
commandes &lt;a href="https://github.com/1024pix/pix-site/pull/395">vous pouvez consulter cette Pull Request&lt;/a> où cela m&amp;rsquo;a été
utile.&lt;/p></description></item><item><title>Pourquoi vous devriez faire un dotfiles</title><link>https://vincenthardouin.dev/posts/pourquoi-vous-devriez-faire-un-dotfiles/</link><pubDate>Wed, 27 Oct 2021 11:07:00 +0200</pubDate><guid>https://vincenthardouin.dev/posts/pourquoi-vous-devriez-faire-un-dotfiles/</guid><description>&lt;p>Pour mon premier article, je souhaite vous partager comment je mets en place mon environnement de travail facilement.&lt;/p>
&lt;p>Pour cela, j&amp;rsquo;utilise un dotfiles, dossier vous permettant de mettre en place votre configuration, via notamment les
fichiers de configs .zshrc, .vimrc, …&lt;/p>
&lt;p>Je vous incite dès aujourd&amp;rsquo;hui à vous créer un dotfiles, et ce pour plusieurs raisons :&lt;/p>
&lt;p>Mettre en place un set-up de 0 m&amp;rsquo;arrive minimum une fois par an :&lt;/p>
&lt;ul>
&lt;li>quand Apple sort sa nouvelle mise à jour majeure : j&amp;rsquo;effectue alors une clean install.&lt;/li>
&lt;li>installation d&amp;rsquo;un VPS&lt;/li>
&lt;li>mise en place de VM&lt;/li>
&lt;li>&amp;hellip;&lt;/li>
&lt;/ul>
&lt;p>Sachant que toute tâche rébarbative doit pouvoir être faite en moins de 10 minutes et être automatisée autant que
possible (cf: &lt;a href="https://www.youtube.com/watch?v=bz0zSVNFW-E">la pensée md10&lt;/a>), la création d&amp;rsquo;un dotfiles parait évidente.&lt;/p>
&lt;p>Les fichiers de configuration sont précieux et proviennent de nombreux petits ajustements. Le dotfiles vous permettra
donc d&amp;rsquo;être assuré de ne rien perdre. Vous pouvez faire de votre dotfiles un repository git, le pusher sur GitHub pour
avoir une sauvegarde et ensuite le cloner pour mettre en place un nouvel environnement.&lt;/p>
&lt;p>Enfin, libre à vous de créer le dotfiles qui vous correspond. Le mien contient mes fichiers de configuration
principaux : .zshrc, .vimrc, .gitconfig, .gitignore_global. Mais surtout, un Makefile chargé de créer des liens
symboliques à partir de ces fichiers et de télécharger les applications que je souhaite, dont brew avec un Brewfile qui
installe tous mes utilitaires. Un vrai gain de temps !&lt;/p>
&lt;p>Si vous souhaitez découvrir plus en détail mon dotfiles, il est disponible
ici : &lt;a href="https://github.com/VincentHardouin/.dotfiles">https://github.com/VincentHardouin/.dotfiles&lt;/a>&lt;/p>
&lt;p>J&amp;rsquo;espère que ces arguments vous donneront envie de créer le vôtre !&lt;/p></description></item></channel></rss>